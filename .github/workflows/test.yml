name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        bun-version: [latest]
      fail-fast: false

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: ${{ matrix.bun-version }}

    - name: Install dependencies
      run: bun install

    - name: Setup test environment
      run: bun run test:setup --verbose

    - name: Run unit tests
      run: bun run test:unit --reporter json --timeout 30000
      env:
        CI: true
        TUSK_TEST_MODE: true

    - name: Run integration tests
      run: bun run test:integration --reporter json --timeout 60000
      env:
        CI: true
        TUSK_TEST_MODE: true

    - name: Run full test suite with coverage
      run: bun run test:coverage
      env:
        CI: true
        TUSK_TEST_MODE: true

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.os }}
        path: |
          test-results/
          coverage/
        retention-days: 30

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: matrix.os == 'ubuntu-latest'
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: tusk-bun-coverage
        fail_ci_if_error: false

  performance:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' || github.event_name == 'schedule'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Install dependencies
      run: bun install

    - name: Setup test environment
      run: bun run test:setup

    - name: Run performance benchmarks
      run: bun run test:benchmark
      env:
        CI: true
        TUSK_TEST_MODE: true

    - name: Upload benchmark results
      uses: actions/upload-artifact@v4
      with:
        name: benchmark-results
        path: test-results/benchmark-*.json
        retention-days: 90

  lint-and-type-check:
    name: Lint and Type Check
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Install dependencies
      run: bun install

    - name: Type check
      run: bun run type-check

    - name: Lint (if available)
      run: bun run lint
      continue-on-error: true

  security:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Install dependencies
      run: bun install

    - name: Run security audit
      run: bun audit || true
      continue-on-error: true

  validate:
    name: Validation
    runs-on: ubuntu-latest
    needs: [test, lint-and-type-check]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Install dependencies
      run: bun install

    - name: Run full validation
      run: bun run validate
      env:
        CI: true
        TUSK_TEST_MODE: true

    - name: Test CLI installation
      run: |
        bun link
        bun run cli.ts help
        bun run cli.ts checkpoint "CI test checkpoint"
        bun run cli.ts recall --days 1
        bun run cli.ts standup --style meeting
      env:
        CI: true
        TUSK_TEST_MODE: true

  publish-test-report:
    name: Publish Test Report
    runs-on: ubuntu-latest
    needs: [test, performance, validate]
    if: always()

    steps:
    - name: Download test artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts/

    - name: Publish test results
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Test Results
        path: 'artifacts/**/test-session-*.json'
        reporter: 'json'